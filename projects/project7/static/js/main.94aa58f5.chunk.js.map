{"version":3,"sources":["reportWebVitals.js","services/fakeGenreService.js","services/fakeMovieService.js","components/common/pagination.jsx","utils/paginate.js","components/common/listGroup.jsx","components/common/like.jsx","components/common/tableBody.jsx","components/common/tableHeader.jsx","components/common/table.jsx","components/moviesTable.jsx","components/searchBox.jsx","components/movies.jsx","components/navBar.jsx","components/notFound.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","genres","_id","name","movies","title","genre","numberInStock","dailyRentalRate","publishDate","liked","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","_","range","aria-label","className","map","page","onClick","paginate","items","pageNumber","startIndex","slice","take","value","ListGroup","textProperty","valueProperty","selectedItem","onItemSelect","selected","item","defaultProps","Like","props","classes","style","cursor","aria-hidden","TableBody","renderCell","column","content","get","path","createKey","key","this","data","columns","Component","TableHeader","raiseSort","sortColumn","order","onSort","renderSortIcon","label","Table","MoviesTable","movie","Link","to","onLike","onDelete","SearchBox","onChange","type","placeholder","e","currentTarget","Movies","state","searchQuery","handleDelete","filter","m","setState","handleLike","index","indexOf","handlePageChange","handleGenreSelect","selectedGenre","handleSearch","query","handleSort","getPagedData","allMovies","filtered","toLowerCase","startsWith","orderBy","totalCount","length","g","count","NavBar","data-toggle","data-target","aria-controls","aria-expanded","id","NavLink","NotFound","App","Fragment","Switch","Route","component","Redirect","from","exact","ReactDOM","render","BrowserRouter","document","getElementById"],"mappings":"6LAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,oECPDQ,EAAS,CACpB,CAAEC,IAAK,2BAA4BC,KAAM,UACzC,CAAED,IAAK,2BAA4BC,KAAM,UACzC,CAAED,IAAK,2BAA4BC,KAAM,aCD3C,IAAMC,EAAS,CACb,CACEF,IAAK,2BACLG,MAAO,aACPC,MAAO,CAAEJ,IAAK,2BAA4BC,KAAM,UAChDI,cAAe,EACfC,gBAAiB,IACjBC,YAAa,2BACbC,OAAO,GAET,CACER,IAAK,2BACLG,MAAO,WACPC,MAAO,CAAEJ,IAAK,2BAA4BC,KAAM,UAChDI,cAAe,EACfC,gBAAiB,KAEnB,CACEN,IAAK,2BACLG,MAAO,UACPC,MAAO,CAAEJ,IAAK,2BAA4BC,KAAM,YAChDI,cAAe,EACfC,gBAAiB,KAEnB,CACEN,IAAK,2BACLG,MAAO,gBACPC,MAAO,CAAEJ,IAAK,2BAA4BC,KAAM,UAChDI,cAAe,EACfC,gBAAiB,KAEnB,CACEN,IAAK,2BACLG,MAAO,WACPC,MAAO,CAAEJ,IAAK,2BAA4BC,KAAM,UAChDI,cAAe,EACfC,gBAAiB,KAEnB,CACEN,IAAK,2BACLG,MAAO,mBACPC,MAAO,CAAEJ,IAAK,2BAA4BC,KAAM,UAChDI,cAAe,EACfC,gBAAiB,KAEnB,CACEN,IAAK,2BACLG,MAAO,YACPC,MAAO,CAAEJ,IAAK,2BAA4BC,KAAM,YAChDI,cAAe,EACfC,gBAAiB,KAEnB,CACEN,IAAK,2BACLG,MAAO,kBACPC,MAAO,CAAEJ,IAAK,2BAA4BC,KAAM,YAChDI,cAAe,EACfC,gBAAiB,KAEnB,CACEN,IAAK,2BACLG,MAAO,eACPC,MAAO,CAAEJ,IAAK,2BAA4BC,KAAM,UAChDI,cAAe,EACfC,gBAAiB,M,2BC1BNG,EApCI,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,WAAYC,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aAI/CC,EAAaC,KAAKC,KAAKN,EAAaC,GAE1C,GAAkB,IAAfG,EAAkB,OAAO,KAE5B,IAAMG,EAAQC,IAAEC,MAAM,EAAGL,EAAa,GAEtC,OACI,qBAAKM,aAAW,0BAAhB,SACI,oBAAIC,UAAU,aAAd,SACKJ,EAAMK,KAAK,SAAAC,GAAI,OACf,oBAAeF,UAAYE,IAASX,EAAc,mBAAqB,YAAvE,SACG,mBAAGS,UAAU,YACTG,QAAS,kBAAMX,EAAaU,IADhC,SAESA,KAHHA,WCfnB,SAASE,EAASC,EAAMC,EAAWhB,GAEtC,IAAMiB,GAAcD,EAAa,GAAKhB,EAGtC,OAAOO,IAAEQ,GACJG,MAAMD,GACNE,KAAKnB,GACLoB,QCTT,IAAMC,EAAY,SAAC,GAAmE,IAAjEN,EAAgE,EAAhEA,MAAMO,EAA0D,EAA1DA,aAAaC,EAA6C,EAA7CA,cAAcC,EAA+B,EAA/BA,aAAaC,EAAkB,EAAlBA,aAEzDC,EAAW,kBAEjB,OACA,oBAAIhB,UAAU,uBAAd,SACKK,EAAMJ,KAAI,SAAAgB,GAAI,OACX,oBACId,QAAS,kBAAMY,EAAaE,IAC5BjB,UAAWiB,IAASH,EAAeE,EAAU,UAAYA,EAF7D,SAIKC,EAAKL,IAJDK,EAAKJ,UAW1BF,EAAUO,aAAe,CACrBN,aAAc,OACdC,cAAe,OAGJF,Q,QCXAQ,EAXF,SAACC,GACV,IAAIC,EAAU,cAEd,OADID,EAAMjC,QAAOkC,GAAW,MAExB,mBAAGrB,UAAWqB,EACVC,MAAO,CAAEC,OAAQ,WACjBpB,QAASiB,EAAMjB,QACfqB,cAAY,UC+BTC,E,4MAjCXC,WAAa,SAACT,EAAMU,GAEhB,OAAIA,EAAOC,QAAgBD,EAAOC,QAAQX,GAEnCpB,IAAEgC,IAAIZ,EAAKU,EAAOG,O,EAI7BC,UAAY,SAACd,EAAKU,GACd,OAAOV,EAAKtC,KAAOgD,EAAOG,MAAQH,EAAOK,M,4CAI7C,WAAU,IAAD,SAEqBC,KAAKb,MAAvBc,EAFH,EAEGA,KAAMC,EAFT,EAESA,QAEd,OACI,gCACGD,EAAKjC,KAAI,SAAAgB,GAAI,OACZ,6BACGkB,EAAQlC,KAAI,SAAA0B,GAAM,OACjB,6BACG,EAAKD,WAAWT,EAAMU,IADhB,EAAKI,UAAUd,EAAMU,QAFzBV,EAAKtC,c,GAzBNyD,aC0DTC,E,4MApDXC,UAAY,SAACR,GAET,IAAMS,EAAU,eAAO,EAAKnB,MAAMmB,YAE/BA,EAAWT,OAASA,EACnBS,EAAWC,MAA6B,QAArBD,EAAWC,MAAkB,OAAS,OAEzDD,EAAWT,KAAOA,EAClBS,EAAWC,MAAQ,OAGvB,EAAKpB,MAAMqB,OAAOF,I,EAItBG,eAAiB,SAAAf,GAAU,IAGfY,EAAe,EAAKnB,MAApBmB,WAIR,OAAGZ,EAAOG,OAASS,EAAWT,KACnB,KAGa,QAArBS,EAAWC,MACH,mBAAGxC,UAAU,mBAEjB,mBAAGA,UAAU,qB,4CAKxB,WAAU,IAAD,OACL,OACG,gCACI,6BACKiC,KAAKb,MAAMe,QAAQlC,KAAI,SAAA0B,GAAM,OACzB,qBACIxB,QAAS,kBAAM,EAAKmC,UAAUX,EAAOG,OACrC9B,UAAU,YAFd,UAIM2B,EAAOgB,MAJb,IAIsB,EAAKD,eAAef,KAJjCA,EAAOG,MAAQH,EAAOK,gB,GA1C7BI,aCoBXQ,EAjBD,SAAC,GAA2C,IAAzCV,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,QAASI,EAAyB,EAAzBA,WAAYE,EAAa,EAAbA,OAExC,OACI,wBAAOzC,UAAU,QAAjB,UACI,cAAC,EAAD,CACImC,QAASA,EACTI,WAAYA,EACZE,OAAQA,IAEZ,cAAC,EAAD,CACIP,KAAMA,EACNC,QAASA,QCsCVU,E,4MAlDXV,QAAU,CACN,CACEL,KAAM,QACNa,MAAO,QACPf,QAAS,SAAAkB,GAAK,OAAI,cAACC,EAAA,EAAD,CAAMC,GAAE,kBAAaF,EAAMnE,KAA3B,SAAmCmE,EAAMhE,UAE7D,CAAEgD,KAAM,aAAca,MAAO,SAC7B,CAAEb,KAAM,gBAAiBa,MAAO,SAChC,CAAEb,KAAM,kBAAmBa,MAAO,QAClC,CACEX,IAAK,OACLJ,QAAS,SAAAkB,GAAK,OACZ,cAAC,EAAD,CAAM3D,MAAO2D,EAAM3D,MAAOgB,QAAS,kBAAM,EAAKiB,MAAM6B,OAAOH,QAG/D,CACEd,IAAK,SACLJ,QAAS,SAAAkB,GAAK,OACZ,wBACE3C,QAAS,kBAAM,EAAKiB,MAAM8B,SAASJ,IACnC9C,UAAU,wBAFZ,uB,4CAaR,WAAS,MAEiCiC,KAAKb,MAApCvC,EAFF,EAEEA,OAAQ4D,EAFV,EAEUA,OAAQF,EAFlB,EAEkBA,WAEvB,OAGG,aAFC,CAEA,EAAD,CACKL,KAAMrD,EACN4D,OAAQA,EACRF,WAAYA,EACZJ,QAASF,KAAKE,c,GA5CJC,aCSXe,EAbG,SAAC,GAAyB,IAAvBzC,EAAsB,EAAtBA,MAAO0C,EAAe,EAAfA,SAC1B,OACE,uBACEC,KAAK,OACLzE,KAAK,QACLoB,UAAU,oBACVsD,YAAY,YACZ5C,MAAOA,EACP0C,SAAU,SAAAG,GAAC,OAAIH,EAASG,EAAEC,cAAc9C,WCkI/B+C,E,4MAjIXC,MAAQ,CACJ7E,OAAQ,GACRH,OAAQ,GACRY,SAAU,EACVC,YAAa,EACboE,YAAY,GACZpB,WAAY,CAAET,KAAM,QAASU,MAAO,Q,EAYxCoB,aAAe,SAACd,GAEb,IAAMjE,EAAS,EAAK6E,MAAM7E,OAAOgF,QAAO,SAAAC,GAAC,OAAIA,EAAEnF,MAAQmE,EAAMnE,OAE7D,EAAKoF,SAAS,CAAClF,Y,EAIlBmF,WAAa,SAAClB,GACV,IAAMjE,EAAM,YAAO,EAAK6E,MAAM7E,QACxBoF,EAAQpF,EAAOqF,QAAQpB,GAC7BjE,EAAOoF,GAAP,eAAoBpF,EAAOoF,IAC3BpF,EAAOoF,GAAO9E,OAASN,EAAOoF,GAAO9E,MACrC,EAAK4E,SAAS,CAAClF,Y,EAInBsF,iBAAmB,SAACjE,GAChB,EAAK6D,SAAS,CAAExE,YAAaW,K,EAIjCkE,kBAAoB,SAACrF,GAEjB,EAAKgF,SAAS,CAAEM,cAAetF,EAAO4E,YAAa,GAAIpE,YAAa,K,EAGxE+E,aAAe,SAAAC,GACX,EAAKR,SAAS,CAAEJ,YAAaY,EAAOF,cAAe,KAAM9E,YAAa,K,EAI1EiF,WAAa,SAACjC,GACT,EAAKwB,SAAS,CAAExB,gB,EAIrBkC,aAAe,WAAM,MAUb,EAAKf,MANLpE,EAJa,EAIbA,SACAC,EALa,EAKbA,YACA8E,EANa,EAMbA,cACAV,EAPa,EAObA,YACQe,EARK,EAQb7F,OACA0D,EATa,EASbA,WAIAoC,EAAWD,EACXf,EACFgB,EAAWD,EAAUb,QAAO,SAAAC,GAAC,OAC3BA,EAAEhF,MAAM8F,cAAcC,WAAWlB,EAAYiB,kBAExCP,GAAiBA,EAAc1F,MACtCgG,EAAWD,EAAUb,QAAO,SAAAC,GAAC,OAAIA,EAAE/E,MAAMJ,MAAQ0F,EAAc1F,QAGjE,IAGME,EAASuB,EAHAP,IAAEiF,QAAQH,EAAS,CAACpC,EAAWT,MAAM,CAACS,EAAWC,QAGjCjD,EAAYD,GAE3C,MAAO,CAAEyF,WAAYJ,EAASK,OAAQ9C,KAAMrD,I,uDAtEhD,WACI,IAAMH,EAAM,CAAI,CAAEC,IAAK,GAAIC,KAAM,eAArB,mBXjBXF,EAAOmF,QAAO,SAAAoB,GAAC,OAAIA,OWkBpBhD,KAAK8B,SAAS,CAAElF,OV8CfA,EU9CoCH,a,oBAwEzC,WAAS,IAGWwG,EAAUjD,KAAKyB,MAAM7E,OAA7BmG,OAHH,EAIsD/C,KAAKyB,MAAxDpE,EAJH,EAIGA,SAAUC,EAJb,EAIaA,YAAagD,EAJ1B,EAI0BA,WAAYoB,EAJtC,EAIsCA,YAE3C,GAAa,IAAVuB,EACC,OAAO,qEAPN,MAWuBjD,KAAKwC,eAAzBM,EAXH,EAWGA,WAAY7C,EAXf,EAWeA,KAEpB,OACI,sBAAKlC,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,SACI,cAAC,EAAD,CACIK,MAAO4B,KAAKyB,MAAMhF,OAClBoC,aAAcmB,KAAKyB,MAAMW,cACzBtD,aAAckB,KAAKmC,sBAG3B,sBAAKpE,UAAU,MAAf,UACI,yCAAY+E,EAAZ,8BACA,cAAC,EAAD,CAAWrE,MAAOiD,EAAaP,SAAUnB,KAAKqC,eAC9C,cAAC,EAAD,CAAazF,OAAQqD,EACRK,WAAYA,EACZU,OAAQhB,KAAK+B,WACbd,SAAUjB,KAAK2B,aACfnB,OAAQR,KAAKuC,aAE1B,cAAC,EAAD,CAAYnF,WAAY0F,EACZzF,SAAUA,EACVC,YAAaA,EACbC,aAAcyC,KAAKkC,6B,GAzH9B/B,a,QCiCN+C,EAxCA,WACb,OACE,sBAAKnF,UAAU,gDAAf,UACE,cAAC+C,EAAA,EAAD,CAAM/C,UAAU,eAAegD,GAAG,IAAlC,mBAGA,wBACEhD,UAAU,iBACVqD,KAAK,SACL+B,cAAY,WACZC,cAAY,sBACZC,gBAAc,qBACdC,gBAAc,QACdxF,aAAW,oBAPb,SASE,sBAAMC,UAAU,0BAElB,qBAAKA,UAAU,2BAA2BwF,GAAG,qBAA7C,SACE,sBAAKxF,UAAU,aAAf,UACE,cAACyF,EAAA,EAAD,CAASzF,UAAU,oBAAoBgD,GAAG,UAA1C,oBAGA,cAACyC,EAAA,EAAD,CAASzF,UAAU,oBAAoBgD,GAAG,aAA1C,uBAGA,cAACyC,EAAA,EAAD,CAASzF,UAAU,oBAAoBgD,GAAG,WAA1C,qBAGA,cAACyC,EAAA,EAAD,CAASzF,UAAU,oBAAoBgD,GAAG,SAA1C,mBAGA,cAACyC,EAAA,EAAD,CAASzF,UAAU,oBAAoBgD,GAAG,YAA1C,+BC5BK0C,EAJE,WACf,OAAO,4C,MCoBMC,MAhBf,WACE,OACE,eAAC,IAAMC,SAAP,WACE,cAAC,EAAD,IACA,sBAAM5F,UAAU,YAAhB,SACE,eAAC6F,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOhE,KAAK,UAAUiE,UAAWtC,IACjC,cAACqC,EAAA,EAAD,CAAOhE,KAAK,aAAaiE,UAAWL,IACpC,cAACM,EAAA,EAAD,CAAUC,KAAK,IAAIC,OAAK,EAAClD,GAAG,YAC5B,cAACgD,EAAA,EAAD,CAAUhD,GAAG,wB,YCPvBmD,IAASC,OACP,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BtI,M","file":"static/js/main.94aa58f5.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\n];\n\nexport function getGenres() {\n  return genres.filter(g => g);\n}\n","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n    liked: true\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  }\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find(m => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find(m => m._id === movie._id) || {};\n  movieInDb.name = movie.name;\n  movieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find(m => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange}) => {\r\n\r\n    // we need to generate an Array with this numbers.\r\n    // Math.ceil() is a lodash function.\r\n    const pagesCount = Math.ceil(itemsCount / pageSize);\r\n\r\n    if(pagesCount === 1) return null;\r\n\r\n    const pages = _.range(1, pagesCount + 1);\r\n\r\n    return ( \r\n        <nav aria-label=\"Page navigation example\">\r\n            <ul className=\"pagination\"> \r\n                {pages.map( page => (\r\n                 <li key={page} className={ page === currentPage ? 'page-item active' : 'page-item'}>\r\n                    <a className=\"page-link\" \r\n                        onClick={() => onPageChange(page)}>\r\n                            {page}\r\n                    </a>\r\n                 </li>\r\n                ))}\r\n            </ul>   \r\n        </nav>\r\n     );\r\n};\r\n\r\n// We add a new property to the component:\r\nPagination.propTypes = {\r\n    // we add the props for our component and their TYPES:\r\n    // And whether their REQUIRED or not:\r\n    itemsCount: PropTypes.number.isRequired, \r\n    pageSize: PropTypes.number.isRequired, \r\n    currentPage: PropTypes.number.isRequired, \r\n    onPageChange: PropTypes.func.isRequired\r\n};\r\n \r\nexport default Pagination;\r\n\r\n","import _ from 'lodash';\r\n\r\n// Function to paginate:\r\nexport function paginate(items,pageNumber,pageSize){\r\n    // calculate the starting Index of the items of the pageNumber:\r\n    const startIndex = (pageNumber - 1) * pageSize;\r\n    \r\n    // convert items array into a lodash wrapper\r\n    return _(items) // return a lodash object\r\n        .slice(startIndex) // start from this index\r\n        .take(pageSize) // take items from this current page.\r\n        .value(); // convert lodash wrapper into a regular array.\r\n}","import React from 'react';\r\n\r\nconst ListGroup = ({ items,textProperty,valueProperty,selectedItem,onItemSelect}) => {\r\n\r\n    const selected = \"list-group-item\";\r\n\r\n    return (\r\n    <ul className=\"clickable list-group\">\r\n        {items.map(item => (\r\n            <li key={item[valueProperty]}\r\n                onClick={() => onItemSelect(item)} \r\n                className={item === selectedItem ? selected +\" active\" : selected}\r\n            >\r\n                {item[textProperty]}\r\n            </li>\r\n        ))}     \r\n    </ul>\r\n    );\r\n}\r\n \r\nListGroup.defaultProps = {\r\n    textProperty: 'name',\r\n    valueProperty: '_id'\r\n};\r\n\r\nexport default ListGroup;","import React from 'react';\r\n\r\n// Stateless Functional Componenet\r\nconst Like = (props) => {\r\n    let classes = \"fa fa-heart\";\r\n    if(!props.liked) classes += \"-o\";\r\n    return (\r\n        <i className={classes} \r\n            style={{ cursor: 'pointer'}} \r\n            onClick={props.onClick} \r\n            aria-hidden=\"true\" />\r\n    );\r\n}\r\n \r\nexport default Like;","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\n\r\nclass TableBody extends Component {\r\n\r\n    // Render Content for each <td>:\r\n    // method to render like button and/or delete button\r\n    // depend on the content of the column.\r\n    renderCell = (item, column) => {\r\n        // if we have content within the column, we return the content.\r\n        if (column.content) return column.content(item);\r\n\r\n        return _.get(item,column.path);\r\n    };\r\n\r\n    // CreateKey Method for each <td>:\r\n    createKey = (item,column) => {\r\n        return item._id + (column.path || column.key);\r\n    };\r\n\r\n\r\n    render() { \r\n        // Object Destructoring\r\n        const { data, columns } = this.props;\r\n\r\n        return (\r\n            <tbody>\r\n              {data.map(item => (\r\n                <tr key={item._id}>\r\n                  {columns.map(column => (\r\n                    <td key={this.createKey(item, column)}>\r\n                      {this.renderCell(item, column)}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          );\r\n    }\r\n}\r\n \r\nexport default TableBody;","import React, { Component } from 'react';\r\n\r\n// Input Properties we need here: \r\n// 1.- columns: array, \r\n// 2.- sortColumn: object, \r\n// 3.- onSort: function\r\nclass TableHeader extends Component {\r\n\r\n    // Sorting Columns:\r\n    raiseSort = (path) => {\r\n        // we clone the sortColumn object:\r\n        const sortColumn = {...this.props.sortColumn};\r\n        // sorting 'asc' or 'desc' depends on the path and order:\r\n        if(sortColumn.path === path)\r\n            sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n        else {\r\n            sortColumn.path = path;\r\n            sortColumn.order = \"asc\";\r\n        }   \r\n        // Raise the Sort Event to movies.jsx:\r\n        this.props.onSort(sortColumn); \r\n     };\r\n\r\n    // renderSortIcon()\r\n    renderSortIcon = column => {\r\n\r\n        // Object Destructoring to clean code a little:\r\n        const { sortColumn } = this.props;\r\n\r\n        // see if current sortColumn is different from column\r\n        // we don't want to render any icons.\r\n        if(column.path !== sortColumn.path)\r\n            return null;\r\n        \r\n        // we need to render different icons depending of the sort order:\r\n        if(sortColumn.order === 'asc') \r\n            return <i className=\"fa fa-sort-asc\"></i>\r\n        \r\n        return <i className=\"fa fa-sort-desc\"></i>  \r\n\r\n    }\r\n\r\n\r\n    render() { \r\n        return ( \r\n           <thead>\r\n               <tr>\r\n                   {this.props.columns.map(column => (\r\n                        <th key={column.path || column.key} \r\n                            onClick={() => this.raiseSort(column.path)}\r\n                            className=\"clickable\"\r\n                        >\r\n                            { column.label } {this.renderSortIcon(column)}\r\n                        </th>\r\n                   ))}\r\n               </tr>\r\n           </thead>\r\n        );\r\n    }\r\n}\r\n \r\nexport default TableHeader;","import React, { Component } from 'react';\r\nimport TableBody from './tableBody';\r\nimport TableHeader from './tableHeader';\r\n\r\n// Input Properties we need here: \r\n// 1.- columns: array, \r\n// 2.- sortColumn: object, \r\n// 3.- onSort: function\r\n// 4.- data: movies\r\nconst Table = ({ data, columns, sortColumn, onSort }) => {\r\n\r\n    return ( \r\n        <table className=\"table\">\r\n            <TableHeader \r\n                columns={columns}\r\n                sortColumn={sortColumn}\r\n                onSort={onSort}\r\n            />\r\n            <TableBody \r\n                data={data}\r\n                columns={columns}\r\n            />\r\n        </table> \r\n     );\r\n}\r\n \r\nexport default Table;","import React, {Component} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Like from './common/like';\r\nimport Table from './common/table';\r\n\r\n\r\nclass MoviesTable extends Component {\r\n\r\n    columns = [\r\n        { \r\n          path: \"title\", \r\n          label: \"Title\", \r\n          content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n        },\r\n        { path: \"genre.name\", label: \"Genre\" },\r\n        { path: \"numberInStock\", label: \"Stock\" },\r\n        { path: \"dailyRentalRate\", label: \"Rate\" },\r\n        {\r\n          key: \"like\",\r\n          content: movie => (\r\n            <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\r\n          )\r\n        },\r\n        {\r\n          key: \"delete\",\r\n          content: movie => (\r\n            <button\r\n              onClick={() => this.props.onDelete(movie)}\r\n              className=\"btn btn-danger btn-sm\"\r\n            >\r\n              Delete\r\n            </button>\r\n          )\r\n        }\r\n      ];\r\n\r\n\r\n\r\n\r\n    render() { \r\n        // Object Destructoring\r\n        const {movies, onSort, sortColumn } = this.props;\r\n\r\n        return ( \r\n            // Table Component that we can reuse in the future.\r\n            // for another table like customers, productos, etc.\r\n           <Table \r\n                data={movies}\r\n                onSort={onSort}\r\n                sortColumn={sortColumn}\r\n                columns={this.columns}\r\n            /> \r\n        );\r\n    }\r\n}\r\n \r\n\r\n \r\nexport default MoviesTable;","import React from \"react\";\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"query\"\r\n      className=\"form-control my-3\"\r\n      placeholder=\"Search...\"\r\n      value={value}\r\n      onChange={e => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;","import React, { Component } from 'react';  \r\nimport { getMovies } from '../services/fakeMovieService'; \r\nimport Pagination from './common/pagination';\r\nimport { paginate } from '../utils/paginate';\r\nimport ListGroup from './common/listGroup';\r\nimport { getGenres } from '../services/fakeGenreService';\r\nimport MoviesTable from './moviesTable';\r\nimport _ from 'lodash';\r\nimport SearchBox from './searchBox';\r\n\r\nclass Movies extends Component {\r\n    state = {  \r\n        movies: [],\r\n        genres: [],\r\n        pageSize: 4,\r\n        currentPage: 1,\r\n        searchQuery:\"\",\r\n        sortColumn: { path: 'title', order: 'asc' }\r\n    };\r\n\r\n    // componentDidMount()\r\n    // this method is called after the component is render into the DOM\r\n    // perfect place for AJAX Calls from the Server.\r\n    componentDidMount(){\r\n        const genres = [{ _id: '', name: 'All Genres' }, ...getGenres()]\r\n        this.setState({ movies: getMovies(), genres });\r\n    }\r\n\r\n    // Method Delete\r\n    handleDelete = (movie) => {\r\n        // Filtering all movies except the selected one.\r\n       const movies = this.state.movies.filter(m => m._id !== movie._id);\r\n       // Update the state with the new array without the selected one.\r\n       this.setState({movies});\r\n    }\r\n\r\n    // handleLike()\r\n    handleLike = (movie) => {\r\n        const movies = [...this.state.movies];\r\n        const index = movies.indexOf(movie);\r\n        movies[index] = {...movies[index]};\r\n        movies[index].liked = !movies[index].liked;\r\n        this.setState({movies});\r\n    };\r\n\r\n    // handlePageChange()\r\n    handlePageChange = (page) => {\r\n        this.setState({ currentPage: page});\r\n    };\r\n\r\n    // handleGenreSelect()\r\n    handleGenreSelect = (genre) => {\r\n        // update selectedGenre state and current page to 1.\r\n        this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1})\r\n    };\r\n\r\n    handleSearch = query => {\r\n        this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\r\n      };\r\n\r\n    // handleSort()\r\n    handleSort = (sortColumn) => {\r\n         this.setState({ sortColumn });\r\n    };\r\n\r\n    // Filtering, Sorting and Pagination.\r\n    getPagedData = () => {\r\n\r\n        // Object Destructoring to cleaner our code:\r\n        const { \r\n            pageSize, \r\n            currentPage, \r\n            selectedGenre,\r\n            searchQuery, \r\n            movies: allMovies,\r\n            sortColumn \r\n        } = this.state;\r\n\r\n        // Filtering Movies by Genres:\r\n        let filtered = allMovies;\r\n        if (searchQuery)\r\n          filtered = allMovies.filter(m =>\r\n            m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n          );\r\n        else if (selectedGenre && selectedGenre._id)\r\n          filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);        \r\n\r\n        // Sorting Column after Filtering Data:\r\n        const sorted = _.orderBy(filtered,[sortColumn.path],[sortColumn.order]);\r\n\r\n        // Paginate Movies (paginate passing the filtered movies):\r\n        const movies = paginate(sorted,currentPage,pageSize);  \r\n        \r\n        return { totalCount: filtered.length, data: movies };\r\n    };\r\n\r\n \r\n    render() {      \r\n\r\n        // Object Destructoring to cleaner our code:\r\n        const { length: count } = this.state.movies;\r\n        const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\r\n\r\n        if(count === 0)\r\n            return <p>There are no movies in the database.</p>;\r\n\r\n         // Filtering, Sorting and Pagination.\r\n         // return total movies and movies filtered,sorted and paginate:\r\n        const { totalCount, data} = this.getPagedData();\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <ListGroup \r\n                        items={this.state.genres} \r\n                        selectedItem={this.state.selectedGenre}\r\n                        onItemSelect={this.handleGenreSelect}\r\n                    />\r\n                </div> \r\n                <div className=\"col\">\r\n                    <p>Showing {totalCount} movies in the database.</p>\r\n                    <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n                    <MoviesTable movies={data}\r\n                                 sortColumn={sortColumn}\r\n                                 onLike={this.handleLike}\r\n                                 onDelete={this.handleDelete}\r\n                                 onSort={this.handleSort}\r\n                    />\r\n                    <Pagination itemsCount={totalCount} \r\n                                pageSize={pageSize}\r\n                                currentPage={currentPage}\r\n                                onPageChange={this.handlePageChange}\r\n                    />\r\n                </div>                \r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n \r\nexport default Movies;","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        Vidly\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNavAltMarkup\"\r\n        aria-controls=\"navbarNavAltMarkup\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\" />\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n        <div className=\"navbar-nav\">\r\n          <NavLink className=\"nav-item nav-link\" to=\"/movies\">\r\n            Movies\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/customers\">\r\n            Customers\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/rentals\">\r\n            Rentals\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/login\">\r\n            Login\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/register\">\r\n            Register\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <h1>Not Found</h1>;\r\n};\r\n\r\nexport default NotFound;","import React from 'react';\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport Movies from './components/movies';\nimport NavBar from './components/navBar';\nimport NotFound from \"./components/notFound\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <NavBar/>\n      <main className=\"container\">\n        <Switch>\n          <Route path=\"/movies\" component={Movies} />\n          <Route path=\"/not-found\" component={NotFound} />\n          <Redirect from=\"/\" exact to=\"/movies\" />\n          <Redirect to=\"/not-found\" />\n        </Switch>\n      </main>\n   </React.Fragment>\n  );\n}\n \nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n \nReactDOM.render(\n  <BrowserRouter>\n    <App />\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}